{"version":3,"sources":["keditor-component-thumbnail-0.0.0.js"],"names":["$","KEditor","keditor","flog","log","components","init","contentArea","container","component","options","componentContent","children","caption","find","addClass","captionInner","length","html","attr","generateId","prop","on","e","onComponentChanged","call","onContainerChanged","onContentChanged","editor","ckeditor","ckeditorOptions","onComponentReady","getContent","id","CKEDITOR","instances","getData","destroy","settingEnabled","settingTitle","initSettingForm","form","ajax","url","type","dataType","success","resp","initMSelectImage","relativeUrl","fileType","hash","img","getSettingComponent","showSettingForm","jQuery"],"mappings":"CAAA,SAAWA,GACP,GAAIC,GAAUD,EAAEE,QACZC,EAAOF,EAAQG,GAEnBH,GAAQI,WAAsB,WAC1BC,KAAM,SAAUC,EAAaC,EAAWC,EAAWP,GAC/CC,EAAK,6BAA8BM,EAEnC,IAAIC,GAAUR,EAAQQ,QAClBC,EAAmBF,EAAUG,SAAS,8BAEtCC,EAAUF,EAAiBG,KAAK,WACpCD,GAAQE,SAAS,WAEjB,IAAIC,GAAeH,EAAQC,KAAK,iBACJ,KAAxBE,EAAaC,SACbJ,EAAQK,KAAK,8BAAgCL,EAAQK,OAAS,UAC9DF,EAAeH,EAAQC,KAAK,mBAG3BE,EAAaG,KAAK,OACnBH,EAAaG,KAAK,KAAMjB,EAAQkB,WAAW,iCAG/CJ,EAAaK,KAAK,mBAAmB,GACrCL,EAAaM,GAAG,QAAS,SAAUC,GACW,kBAA/Bb,GAAQc,oBACfd,EAAQc,mBAAmBC,KAAKlB,EAAagB,EAAGd,GAGV,kBAA/BC,GAAQgB,oBACfhB,EAAQgB,mBAAmBD,KAAKlB,EAAagB,EAAGf,GAGZ,kBAA7BE,GAAQiB,kBACfjB,EAAQiB,iBAAiBF,KAAKlB,EAAagB,IAInD,IAAIK,GAASZ,EAAaa,SAASnB,EAAQoB,iBAAiBF,MAC5DA,GAAON,GAAG,gBAAiB,WACvBnB,EAAK,oBAAqBM,GAEc,kBAA7BC,GAAQqB,kBACfrB,EAAQqB,iBAAiBN,KAAKlB,EAAaE,EAAWmB,MAKlEI,WAAY,SAAUvB,EAAWP,GAC7BC,EAAK,mCAAoCM,EAEzC,IAAIE,GAAmBF,EAAUK,KAAK,8BAClCD,EAAUF,EAAiBG,KAAK,YAChCE,EAAeH,EAAQC,KAAK,kBAE5BmB,EAAKjB,EAAaG,KAAK,MACvBS,EAASM,SAASC,UAAUF,EAKhC,OAJIL,IACAf,EAAQK,KAAKU,EAAOQ,WAGjBzB,EAAiBO,QAG5BmB,QAAS,SAAU5B,EAAWP,GAC1BC,EAAK,2BAA4BM,EAEjC,IAAIwB,GAAKxB,EAAUK,KAAK,kBAAkBK,KAAK,MAC3CS,EAASM,SAASC,UAAUF,EAC5BL,IACAA,EAAOS,WAIfC,gBAAgB,EAEhBC,aAAc,qBAEdC,gBAAiB,SAAUC,EAAMvC,GAG7B,MAFAC,GAAK,yCAEEH,EAAE0C,MACLC,IAAK,0DACLC,KAAM,MACNC,SAAU,OACVC,QAAS,SAAUC,GACfN,EAAKvB,KAAK6B,GAEVC,iBAAiBP,EAAK3B,KAAK,eAAgBZ,EAAS,SAAUyC,EAAKM,EAAaC,EAAUC,GACtF,GAAIC,GAAMlD,EAAQmD,sBAAsBvC,KAAK,iBAE7CsC,GAAIjC,KAAK,MAAO,kBAAoBgC,SAMpDG,gBAAiB,SAAUb,EAAMhC,EAAWP,GACxCC,EAAK,wCAAyCM,MAIvD8C","file":"keditor-component-thumbnail-0.0.0.min.js","sourcesContent":["(function ($) {\r\n    var KEditor = $.keditor;\r\n    var flog = KEditor.log;\r\n    \r\n    KEditor.components['thumbnail'] = {\r\n        init: function (contentArea, container, component, keditor) {\r\n            flog('init \"thumbnail\" component', component);\r\n            \r\n            var options = keditor.options;\r\n            var componentContent = component.children('.keditor-component-content');\r\n            \r\n            var caption = componentContent.find('.caption');\r\n            caption.addClass('clearfix');\r\n            \r\n            var captionInner = caption.find('.caption-inner');\r\n            if (captionInner.length === 0) {\r\n                caption.html('<div class=\"caption-inner\">' + caption.html() + '</div>');\r\n                captionInner = caption.find('.caption-inner');\r\n            }\r\n            \r\n            if (!captionInner.attr('id')) {\r\n                captionInner.attr('id', keditor.generateId('component-text-content-inner'));\r\n            }\r\n            \r\n            captionInner.prop('contenteditable', true);\r\n            captionInner.on('input', function (e) {\r\n                if (typeof options.onComponentChanged === 'function') {\r\n                    options.onComponentChanged.call(contentArea, e, component);\r\n                }\r\n                \r\n                if (typeof options.onContainerChanged === 'function') {\r\n                    options.onContainerChanged.call(contentArea, e, container);\r\n                }\r\n                \r\n                if (typeof options.onContentChanged === 'function') {\r\n                    options.onContentChanged.call(contentArea, e);\r\n                }\r\n            });\r\n            \r\n            var editor = captionInner.ckeditor(options.ckeditorOptions).editor;\r\n            editor.on('instanceReady', function () {\r\n                flog('CKEditor is ready', component);\r\n                \r\n                if (typeof options.onComponentReady === 'function') {\r\n                    options.onComponentReady.call(contentArea, component, editor);\r\n                }\r\n            });\r\n        },\r\n        \r\n        getContent: function (component, keditor) {\r\n            flog('getContent \"thumbnail\" component', component);\r\n            \r\n            var componentContent = component.find('.keditor-component-content');\r\n            var caption = componentContent.find('.caption');\r\n            var captionInner = caption.find('.caption-inner');\r\n            \r\n            var id = captionInner.attr('id');\r\n            var editor = CKEDITOR.instances[id];\r\n            if (editor) {\r\n                caption.html(editor.getData());\r\n            }\r\n            \r\n            return componentContent.html();\r\n        },\r\n        \r\n        destroy: function (component, keditor) {\r\n            flog('destroy \"text\" component', component);\r\n            \r\n            var id = component.find('.caption-inner').attr('id');\r\n            var editor = CKEDITOR.instances[id];\r\n            if (editor) {\r\n                editor.destroy();\r\n            }\r\n        },\r\n        \r\n        settingEnabled: true,\r\n        \r\n        settingTitle: 'Thumbnail Settings',\r\n        \r\n        initSettingForm: function (form, keditor) {\r\n            flog('initSettingForm \"thumbnail\" component');\r\n            \r\n            return $.ajax({\r\n                url: '/theme/apps/keditor-lib/componentThumbnailSettings.html',\r\n                type: 'get',\r\n                dataType: 'HTML',\r\n                success: function (resp) {\r\n                    form.html(resp);\r\n                    \r\n                    initMSelectImage(form.find('.photo-edit'), keditor, function (url, relativeUrl, fileType, hash) {\r\n                        var img = keditor.getSettingComponent().find('.thumbnail img');\r\n                        \r\n                        img.attr('src', '/_hashes/files/' + hash);\r\n                    });\r\n                }\r\n            });\r\n        },\r\n        \r\n        showSettingForm: function (form, component, keditor) {\r\n            flog('showSettingForm \"thumbnail\" component', component);\r\n        }\r\n    };\r\n    \r\n})(jQuery);\r\n"]}