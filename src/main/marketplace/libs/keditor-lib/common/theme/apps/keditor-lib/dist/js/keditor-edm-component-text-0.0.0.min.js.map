{"version":3,"sources":["keditor-edm-component-text-0.0.0.js"],"names":["$","KEditor","keditor","edmEditor","flog","log","CKEDITOR","disableAutoInline","isEDM","components","init","contentArea","container","component","options","componentContent","children","textWrapper","find","textHtml","html","editorDiv","attr","generateId","editor","ckeditor","ckeditorOptions","on","onComponentReady","call","e","onComponentChanged","onContainerChanged","onContentChanged","getContent","id","instances","getData","destroy","settingEnabled","settingTitle","initSettingForm","form","append","initDefaultComponentControls","showSettingForm","showDefaultComponentControls","jQuery"],"mappings":"CAAA,SAAWA,GACP,GAAIC,GAAUD,EAAEE,QACZC,EAAYH,EAAEG,UACdC,EAAOH,EAAQI,GAEnBC,UAASC,mBAAoB,EAC7BD,SAASE,OAAQ,EAIjBP,EAAQQ,WAAiB,MACrBC,KAAM,SAAUC,EAAaC,EAAWC,EAAWX,GAC/CE,EAAK,wBAAyBS,EAE9B,IACIC,GAAUZ,EAAQY,QAElBC,EAAmBF,EAAUG,SAAS,8BACtCC,EAAcF,EAAiBG,KAAK,iBACpCC,EAAWF,EAAYG,OACvBC,EAAYrB,EAAE,0DAA0DsB,KAAK,KAAMpB,EAAQqB,WAAW,gBAAgBH,KAAKD,EAC/HF,GAAYG,KAAKC,EAEjB,IAAIG,GAASH,EAAUI,SAASvB,EAAQY,QAAQY,iBAAiBF,MACjEA,GAAOG,GAAG,gBAAiB,WACvBvB,EAAK,oBAAqBS,GAEc,kBAA7BC,GAAQc,kBACfd,EAAQc,iBAAiBC,KAAK3B,EAASW,EAAWW,EAAQb,KAIlEU,EAAUM,GAAG,QAAS,SAAUG,GACc,kBAA/BhB,GAAQiB,oBACfjB,EAAQiB,mBAAmBF,KAAK3B,EAAS4B,EAAGjB,EAAWF,GAGjB,kBAA/BG,GAAQkB,oBACflB,EAAQkB,mBAAmBH,KAAK3B,EAAS4B,EAAGlB,EAAWD,GAGnB,kBAA7BG,GAAQmB,kBACfnB,EAAQmB,iBAAiBJ,KAAK3B,EAAS4B,EAAGnB,MAKtDuB,WAAY,SAAUrB,EAAWX,GAC7BE,EAAK,8BAA+BS,EAEpC,IAAIE,GAAmBF,EAAUK,KAAK,8BAClCD,EAAcF,EAAiBG,KAAK,iBACpCG,EAAYN,EAAiBG,KAAK,gBAClCiB,EAAKd,EAAUC,KAAK,MACpBE,EAASlB,SAAS8B,UAAUD,EAMhC,OAJIX,IACAP,EAAYG,KAAKI,EAAOa,WAGrBtB,EAAiBK,QAG5BkB,QAAS,SAAUzB,EAAWX,GAC1BE,EAAK,2BAA4BS,EAEjC,IAAIsB,GAAKtB,EAAUK,KAAK,gBAAgBI,KAAK,MACzCE,EAASlB,SAAS8B,UAAUD,EAC5BX,IACAA,EAAOc,WAIfC,gBAAgB,EAEhBC,aAAc,gBAEdC,gBAAiB,SAAUC,EAAMxC,GAC7BE,EAAK,oCACLsC,EAAKC,OACD,uCAIJD,EAAOA,EAAKxB,KAAK,oBACjBf,EAAUyC,6BAA6BF,EAAMxC,IAGjD2C,gBAAiB,SAAUH,EAAM7B,EAAWX,GACxCE,EAAK,mCAAoCS,GAEzCV,EAAU2C,6BAA6BJ,EAAM7B,EAAWX,MAIjE6C","file":"keditor-edm-component-text-0.0.0.min.js","sourcesContent":["(function ($) {\r\n    var KEditor = $.keditor;\r\n    var edmEditor = $.edmEditor;\r\n    var flog = KEditor.log;\r\n\r\n    CKEDITOR.disableAutoInline = true;\r\n    CKEDITOR.isEDM = true;\r\n\r\n    // Text component\r\n    // ---------------------------------------------------------------------\r\n    KEditor.components['text'] = {\r\n        init: function (contentArea, container, component, keditor) {\r\n            flog('init \"text\" component', component);\r\n\r\n            var self = this;\r\n            var options = keditor.options;\r\n\r\n            var componentContent = component.children('.keditor-component-content');\r\n            var textWrapper = componentContent.find('.text-wrapper');\r\n            var textHtml = textWrapper.html();\r\n            var editorDiv = $('<div class=\"text-editor\" contenteditable=\"true\"></div>').attr('id', keditor.generateId('text-editor')).html(textHtml);\r\n            textWrapper.html(editorDiv);\r\n\r\n            var editor = editorDiv.ckeditor(keditor.options.ckeditorOptions).editor;\r\n            editor.on('instanceReady', function () {\r\n                flog('CKEditor is ready', component);\r\n\r\n                if (typeof options.onComponentReady === 'function') {\r\n                    options.onComponentReady.call(keditor, component, editor, contentArea);\r\n                }\r\n            });\r\n\r\n            editorDiv.on('input', function (e) {\r\n                if (typeof options.onComponentChanged === 'function') {\r\n                    options.onComponentChanged.call(keditor, e, component, contentArea);\r\n                }\r\n\r\n                if (typeof options.onContainerChanged === 'function') {\r\n                    options.onContainerChanged.call(keditor, e, container, contentArea);\r\n                }\r\n\r\n                if (typeof options.onContentChanged === 'function') {\r\n                    options.onContentChanged.call(keditor, e, contentArea);\r\n                }\r\n            });\r\n        },\r\n\r\n        getContent: function (component, keditor) {\r\n            flog('getContent \"text\" component', component);\r\n\r\n            var componentContent = component.find('.keditor-component-content');\r\n            var textWrapper = componentContent.find('.text-wrapper');\r\n            var editorDiv = componentContent.find('.text-editor');\r\n            var id = editorDiv.attr('id');\r\n            var editor = CKEDITOR.instances[id];\r\n\r\n            if (editor) {\r\n                textWrapper.html(editor.getData());\r\n            }\r\n\r\n            return componentContent.html();\r\n        },\r\n\r\n        destroy: function (component, keditor) {\r\n            flog('destroy \"text\" component', component);\r\n\r\n            var id = component.find('.text-editor').attr('id');\r\n            var editor = CKEDITOR.instances[id];\r\n            if (editor) {\r\n                editor.destroy();\r\n            }\r\n        },\r\n\r\n        settingEnabled: true,\r\n\r\n        settingTitle: 'Text Settings',\r\n\r\n        initSettingForm: function (form, keditor) {\r\n            flog('initSettingForm \"text\" component');\r\n            form.append(\r\n                '<div class=\"form-horizontal\">' +\r\n                '</div>'\r\n            );\r\n\r\n            form = form.find('.form-horizontal');\r\n            edmEditor.initDefaultComponentControls(form, keditor);\r\n        },\r\n\r\n        showSettingForm: function (form, component, keditor) {\r\n            flog('showSettingForm \"text\" component', component);\r\n    \r\n            edmEditor.showDefaultComponentControls(form, component, keditor);\r\n        }\r\n    };\r\n\r\n})(jQuery);\r\n"]}