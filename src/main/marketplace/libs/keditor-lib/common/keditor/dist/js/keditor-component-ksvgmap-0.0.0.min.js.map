{"version":3,"sources":["keditor-component-ksvgmap-0.0.0.js"],"names":["$","KEditor","keditor","flog","log","components","init","contentArea","container","component","script","find","length","remove","attr","css","getScriptOnce","vectorMap","map","backgroundColor","zoomButtons","focusOn","x","y","scale","regionStyle","initial","fill","hover","onRegionTipShow","e","el","code","html","i","setInterval","updateSize","clearInterval","getContent","componentContent","children","arr","document","body","insertBefore","insertAfter","settingEnabled","settingTitle","initSettingForm","form","ajax","url","type","dataType","success","resp","getSettingComponent","on","val","this","value","currentState","showSettingForm","height","defaultState","jQuery"],"mappings":"CAAA,SAAWA,GACP,GAAIC,GAAUD,EAAEE,QACZC,EAAOF,EAAQG,GAEnBH,GAAQI,WAAoB,SACxBC,KAAM,SAAUC,EAAaC,EAAWC,EAAWP,GAC/C,GAAIQ,GAASD,EAAUE,KAAK,SACxBD,GAAOE,QACPF,EAAOG,SAEPJ,EAAUK,KAAK,gBACfL,EAAUE,KAAK,YAAYI,IAAI,UAAWN,EAAUK,KAAK,gBAE7Dd,EAAEgB,cAAc,2DAA4D,WACxEhB,EAAEgB,cAAc,yDAA0D,WACtEP,EAAUE,KAAK,YAAYM,WACvBC,IAAK,UACLC,gBAAiB,OACjBC,aAAa,EACbC,SACIC,EAAG,GACHC,EAAG,GACHC,MAAO,GAEXC,aACIC,SACIC,KAAM,WAEVC,OACID,KAAM,YAGdE,gBAAiB,SAAUC,EAAGC,EAAIC,GAC1BvB,EAAUK,KAAK,QAAUkB,IACzBD,EAAGE,KAAKF,EAAGE,OAAS,MAAQxB,EAAUK,KAAK,QAAUkB,MAGjE,IAAIE,GAAIC,YAAY,WAChB,IACI,GAAIjB,GAAMT,EAAUE,KAAK,YAAYM,UAAU,MAAO,YACtDC,GAAIkB,aACJC,cAAcH,GAChB,MAAOJ,GACL3B,EAAK,qCAEV,SAIfmC,WAAY,SAAU7B,EAAWP,GAC7BC,EAAK,gCAAiCM,EACtC,IAAI8B,GAAmB9B,EAAU+B,SAAS,8BACtC9B,EAAS,8wBACTK,EAAM,sFACVN,GAAUE,KAAK,yBAAyBE,QACxC,IAAI4B,GAAMzC,EAAE0C,SAASC,MAAMhC,KAAK,wDAQhC,OAPI8B,GAAI7B,OAAS,GACTZ,EAAEyC,EAAIA,EAAI7B,OAAS,IAAIE,KAAK,QAAUL,EAAUK,KAAK,QACrDd,EAAEe,GAAK6B,aAAanC,EAAUE,KAAK,aACnCX,EAAEU,GAAQmC,YAAYpC,EAAUE,KAAK,cAItC4B,EAAiBN,QAG5Ba,gBAAgB,EAEhBC,aAAc,kBAEdC,gBAAiB,SAAUC,EAAM/C,GAG7B,MAFAC,GAAK,yBAA0B8C,GAExBjD,EAAEkD,MACLC,IAAK,yCACLC,KAAM,MACNC,SAAU,OACVC,QAAS,SAAUC,GACfN,EAAKhB,KAAKsB,EAEV,IAAI9C,GAAYP,EAAQsD,qBACxBP,GAAKtC,KAAK,UAAU8C,GAAG,SAAU,SAAU3B,GACvC,GAAI4B,GAAMjD,EAAUK,KAAK,QAAU6C,KAAKC,MACxCX,GAAKtC,KAAK,iBAAiB+C,IAAIA,KAEnCT,EAAKtC,KAAK,iBAAiB8C,GAAG,SAAU,SAAU3B,GAC9C,GAAI+B,GAAeZ,EAAKtC,KAAK,UAAU+C,KACvCjD,GAAUK,KAAK,QAAU+C,EAAcF,KAAKC,SAEhDX,EAAKtC,KAAK,WAAW8C,GAAG,SAAU,SAAU3B,GACxCrB,EAAUK,KAAK,cAAe6C,KAAKC,OACnCnD,EAAUE,KAAK,YAAYI,IAAI,SAAU4C,KAAKC,MAC9C,IAAI1C,GAAMT,EAAUE,KAAK,YAAYM,UAAU,MAAO,YACtDC,GAAIkB,mBAKpB0B,gBAAiB,SAAUb,EAAMxC,EAAWP,GACxC,GAAI6D,GAAStD,EAAUK,KAAK,eACxBkD,EAAef,EAAKtC,KAAK,UAAU+C,KACvCT,GAAKtC,KAAK,WAAW+C,IAAIK,GACzBd,EAAKtC,KAAK,iBAAiB+C,IAAIjD,EAAUK,KAAK,QAAUkD,OAGjEC","file":"keditor-component-ksvgmap-0.0.0.min.js","sourcesContent":["(function ($) {\n    var KEditor = $.keditor;\n    var flog = KEditor.log;\n    \n    KEditor.components['ksvgmap'] = {\n        init: function (contentArea, container, component, keditor) {\n            var script = component.find('script');\n            if (script.length) {\n                script.remove();\n            }\n            if (component.attr('data-height')) {\n                component.find('.ksvgmap').css('height', +component.attr('data-height'));\n            }\n            $.getScriptOnce('/static/jquery-jvectormap/jquery-jvectormap-2.0.3.min.js', function () {\n                $.getScriptOnce('/static/jquery-jvectormap/jquery-jvectormap-au-mill.js', function () {\n                    component.find('.ksvgmap').vectorMap({\n                        map: 'au_mill',\n                        backgroundColor: '#fff',\n                        zoomButtons: false,\n                        focusOn: {\n                            x: 0.5,\n                            y: 0.5,\n                            scale: 1\n                        },\n                        regionStyle: {\n                            initial: {\n                                fill: '#efefef'\n                            },\n                            hover: {\n                                fill: \"#00aa90\"\n                            }\n                        },\n                        onRegionTipShow: function (e, el, code) {\n                            if (component.attr('data-' + code))\n                                el.html(el.html() + ' - ' + component.attr('data-' + code));\n                        }\n                    });\n                    var i = setInterval(function () {\n                        try {\n                            var map = component.find('.ksvgmap').vectorMap('get', 'mapObject');\n                            map.updateSize();\n                            clearInterval(i);\n                        } catch (e) {\n                            flog('trying to get jvectormap object');\n                        }\n                    }, 50);\n                });\n            });\n        },\n        getContent: function (component, keditor) {\n            flog('getContent \"svgmap\" component', component);\n            var componentContent = component.children('.keditor-component-content');\n            var script = '<script>$(function(){$(document.body).hasClass(\"content-editor-page\")||$.getScriptOnce(\"/static/jquery-jvectormap/jquery-jvectormap-2.0.3.min.js\",function(){$.getScriptOnce(\"/static/jquery-jvectormap/jquery-jvectormap-au-mill.js\",function(){$(\".ksvgmap\").each(function(){var a=$(this).parents(\"[data-type=component-ksvgmap]\");a.hasClass(\"ksvgInit\")||(a.addClass(\"ksvgInit\"),$(this).vectorMap({map:\"au_mill\",backgroundColor:\"#fff\",zoomButtons:!1,scale:5,regionStyle:{initial:{fill:\"#efefef\"},hover:{fill:\"#00aa90\"}},onRegionTipShow:function(b,c,d){a.attr(\"data-\"+d)&&c.html(\"<span class=\\'vectormap-tip-region-name\\'>\"+c.html()+\"</span><span class=\\'vectormap-tip-separator\\'> - </span><span class=\\'vectormap-tip-region-data\\'>\"+a.attr(\"data-\"+d)+\"</span>\")}}))})})})});</script>';\n            var css = '<link rel=\"stylesheet\" href=\"/static/jquery-jvectormap/jquery-jvectormap-2.0.3.css\">';\n            component.find('.jvectormap-container').remove();\n            var arr = $(document.body).find('[data-type=\"component-ksvgmap\"]:not(.keditor-snippet)');\n            if (arr.length > 0) {\n                if ($(arr[arr.length - 1]).attr('id') === component.attr('id')) {\n                    $(css).insertBefore(component.find('.ksvgmap'));\n                    $(script).insertAfter(component.find('.ksvgmap'));\n                }\n            }\n            \n            return componentContent.html();\n        },\n        \n        settingEnabled: true,\n        \n        settingTitle: 'SVGMap Settings',\n        \n        initSettingForm: function (form, keditor) {\n            flog('init \"svgmap\" settings', form);\n            \n            return $.ajax({\n                url: '/keditor/componentKsvgMapSettings.html',\n                type: 'get',\n                dataType: 'HTML',\n                success: function (resp) {\n                    form.html(resp);\n                    \n                    var component = keditor.getSettingComponent();\n                    form.find('.state').on('change', function (e) {\n                        var val = component.attr('data-' + this.value);\n                        form.find('.stateMessage').val(val);\n                    });\n                    form.find('.stateMessage').on('change', function (e) {\n                        var currentState = form.find('.state').val();\n                        component.attr('data-' + currentState, this.value);\n                    });\n                    form.find('.height').on('change', function (e) {\n                        component.attr('data-height', this.value);\n                        component.find('.ksvgmap').css('height', this.value);\n                        var map = component.find('.ksvgmap').vectorMap('get', 'mapObject');\n                        map.updateSize();\n                    });\n                }\n            });\n        },\n        showSettingForm: function (form, component, keditor) {\n            var height = component.attr('data-height');\n            var defaultState = form.find('.state').val();\n            form.find('.height').val(height);\n            form.find('.stateMessage').val(component.attr('data-' + defaultState));\n        }\n    };\n})(jQuery);\n"]}