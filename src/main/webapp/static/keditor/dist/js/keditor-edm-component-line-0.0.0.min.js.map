{"version":3,"sources":["keditor-edm-component-line-0.0.0.js"],"names":["$","KEditor","keditor","flog","log","components","settingEnabled","settingTitle","initSettingForm","form","append","lineHeight","find","on","setStyle","getSettingComponent","this","value","initPaddingControls","initBgColorControl","lineColorPicker","initColorPicker","color","wrapper","div","children","val","showSettingForm","component","height","css","replace","showBgColorControl","showPaddingControls","colorpicker","jQuery"],"mappings":"CAOA,SAAWA,GACP,GAAIC,GAAUD,EAAEE,QACZC,EAAOF,EAAQG,GAEnBH,GAAQI,WAAiB,MACrBC,gBAAgB,EAEhBC,aAAc,gBAEdC,gBAAiB,SAAUC,EAAMP,GAC7BC,EAAK,oCACLM,EAAKC,OACD,ukBAmBJ,IAAIC,GAAaF,EAAKG,KAAK,eAC3BD,GAAWE,GAAG,SAAU,WACpBC,SAASZ,EAAQa,sBAAsBH,KAAK,gBAAiB,SAAUI,KAAKC,SAGhFR,EAAOA,EAAKG,KAAK,QACjBX,EAAQiB,oBAAoBhB,EAASO,EAAM,WAC3CR,EAAQkB,mBAAmBjB,EAASO,EAAM,UAE1C,IAAIW,GAAkBX,EAAKG,KAAK,qBAChCS,iBAAgBD,EAAiB,SAAUE,GACvC,GAAIC,GAAUrB,EAAQa,sBAAsBH,KAAK,YAC7CY,EAAMD,EAAQE,SAAS,MAEvBH,IAAmB,gBAAVA,EACTR,SAASU,EAAK,mBAAoBF,IAElCR,SAASU,EAAK,mBAAoB,IAClCf,EAAKG,KAAK,eAAec,IAAI,QAKzCC,gBAAiB,SAAUlB,EAAMmB,EAAW1B,GACxCC,EAAK,mCAAoCyB,EAEzC,IAAIjB,GAAaF,EAAKG,KAAK,gBACvBiB,EAASD,EAAUhB,KAAK,kBAAkBkB,IAAI,SAClDnB,GAAWe,IAAIG,EAASA,EAAOE,QAAQ,KAAM,IAAM,KAEnD9B,EAAQ+B,mBAAmB9B,EAASO,EAAMmB,GAC1C3B,EAAQgC,oBAAoB/B,EAASO,EAAMmB,EAE3C,IAAIL,GAAUK,EAAUhB,KAAK,YACzBY,EAAMD,EAAQE,SAAS,OACvBL,EAAkBX,EAAKG,KAAK,qBAChCT,GAAKqB,EAAIM,IAAI,qBACbV,EAAgBc,YAAY,WAAYV,EAAIM,IAAI,qBAAuB,OAIhFK","file":"keditor-edm-component-line-0.0.0.min.js","sourcesContent":["/**\r\n * KEditor Line Component\r\n * @copyright: Kademi (http://kademi.co)\r\n * @author: Kademi (http://kademi.co)\r\n * @version: @{version}\r\n * @dependencies: $, $.fn.draggable, $.fn.droppable, $.fn.sortable, Bootstrap, FontAwesome (optional)\r\n */\r\n(function ($) {\r\n    var KEditor = $.keditor;\r\n    var flog = KEditor.log;\r\n\r\n    KEditor.components['line'] = {\r\n        settingEnabled: true,\r\n\r\n        settingTitle: 'Line Settings',\r\n\r\n        initSettingForm: function (form, keditor) {\r\n            flog('initSettingForm \"line\" component');\r\n            form.append(\r\n                '<form class=\"form-horizontal\">' +\r\n                '    <div class=\"form-group\">' +\r\n                '       <div class=\"col-md-12\">' +\r\n                '           <label>Color</label>' +\r\n                '           <div class=\"input-group line-color-picker\">' +\r\n                '               <span class=\"input-group-addon\"><i></i></span>' +\r\n                '               <input type=\"text\" value=\"\" id=\"line-color\" class=\"form-control\" />' +\r\n                '           </div>' +\r\n                '       </div>' +\r\n                '    </div>' +\r\n                '    <div class=\"form-group\">' +\r\n                '       <label for=\"line-height\" class=\"col-sm-12\">Height</label>' +\r\n                '       <div class=\"col-sm-12\">' +\r\n                '           <input type=\"number\" id=\"line-height\" class=\"form-control\" />' +\r\n                '       </div>' +\r\n                '    </div>' +\r\n                '</form>'\r\n            );\r\n\r\n            var lineHeight = form.find('#line-height');\r\n            lineHeight.on('change', function () {\r\n                setStyle(keditor.getSettingComponent().find('.wrapper div'), 'height', this.value);\r\n            });\r\n\r\n            form = form.find('form');\r\n            KEditor.initPaddingControls(keditor, form, 'prepend');\r\n            KEditor.initBgColorControl(keditor, form, 'prepend');\r\n\r\n            var lineColorPicker = form.find('.line-color-picker');\r\n            initColorPicker(lineColorPicker, function (color) {\r\n                var wrapper = keditor.getSettingComponent().find('.wrapper');\r\n                var div = wrapper.children('div');\r\n\r\n                if (color && color !== 'transparent') {\r\n                    setStyle(div, 'background-color', color);\r\n                } else {\r\n                    setStyle(div, 'background-color', '');\r\n                    form.find('#line-color').val('');\r\n                }\r\n            });\r\n        },\r\n\r\n        showSettingForm: function (form, component, keditor) {\r\n            flog('showSettingForm \"line\" component', component);\r\n\r\n            var lineHeight = form.find('#line-height');\r\n            var height = component.find('.wrapper > div').css('height');\r\n            lineHeight.val(height ? height.replace('px', '') : '0');\r\n\r\n            KEditor.showBgColorControl(keditor, form, component);\r\n            KEditor.showPaddingControls(keditor, form, component);\r\n\r\n            var wrapper = component.find('.wrapper');\r\n            var div = wrapper.children('div');\r\n            var lineColorPicker = form.find('.line-color-picker');\r\n            flog(div.css('background-color'));\r\n            lineColorPicker.colorpicker('setValue', div.css('background-color') || '');\r\n        }\r\n    };\r\n\r\n})(jQuery);\r\n"],"sourceRoot":"/source/"}