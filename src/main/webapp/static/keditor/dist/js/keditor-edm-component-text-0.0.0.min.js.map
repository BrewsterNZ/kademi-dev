{"version":3,"sources":["keditor-edm-component-text-0.0.0.js"],"names":["$","KEditor","keditor","edmEditor","flog","log","CKEDITOR","disableAutoInline","isEDM","components","options","title","allowedContent","bodyId","templates_replaceContent","toolbarGroups","name","groups","extraPlugins","removePlugins","removeButtons","enterMode","ENTER_DIV","forceEnterMode","filebrowserBrowseUrl","filebrowserUploadUrl","format_tags","stylesSet","stylesPath","line_height","init","contentArea","container","component","self","this","skin","editorSkin","templates_files","templatesPath","componentContent","children","textWrapper","find","textHtml","html","editorDiv","attr","generateId","editor","ckeditor","on","onComponentReady","call","e","onComponentChanged","onContainerChanged","onContentChanged","getContent","id","instances","getData","destroy","settingEnabled","settingTitle","initSettingForm","form","append","initDefaultComponentControls","showSettingForm","showDefaultComponentControls","jQuery"],"mappings":"CAOA,SAAWA,GACP,GAAIC,GAAUD,EAAEE,QACZC,EAAYH,EAAEG,UACdC,EAAOH,EAAQI,GAEnBC,UAASC,mBAAoB,EAC7BD,SAASE,OAAQ,EAIjBP,EAAQQ,WAAiB,MACrBC,SACIC,OAAO,EACPC,gBAAgB,EAChBC,OAAQ,SACRC,0BAA0B,EAC1BC,gBACKC,KAAM,WAAYC,QAAS,OAAQ,WAAY,cAC/CD,KAAM,UAAWC,QAAS,OAAQ,YAAa,eAAgB,aAC/DD,KAAM,QAASC,QAAS,WACxBD,KAAM,cAAeC,QAAS,cAAe,aAC7CD,KAAM,YAAaC,QAAS,OAAQ,SAAU,SAAU,QAAS,OAAQ,eACzED,KAAM,QAASC,QAAS,WACxBD,KAAM,SAAUC,QAAS,WAC1B,KACCD,KAAM,YAAaC,QAAS,YAAa,UACzCD,KAAM,SAAUC,QAAS,YACzBD,KAAM,SAAUC,QAAS,YACzBD,KAAM,QAASC,QAAS,WACxBD,KAAM,SAAUC,QAAS,YACzBD,KAAM,QAASC,QAAS,WAE7BC,aAAc,8CACdC,cAAe,6BACfC,cAAe,yWACfC,UAAWf,SAASgB,UACpBC,gBAAgB,EAChBC,qBAAsB,+FACtBC,qBAAsB,mBACtBC,YAAa,sBACbC,UAAW,YAAcC,WACzBC,YAAa,uBAGjBC,KAAM,SAAUC,EAAaC,EAAWC,EAAW/B,GAC/CE,EAAK,wBAAyB6B,EAE9B,IAAIC,GAAOC,KACPzB,EAAUR,EAAQQ,OACtBwB,GAAKxB,QAAQ0B,KAAOC,WACpBH,EAAKxB,QAAQ4B,iBAAmBC,cAEhC,IAAIC,GAAmBP,EAAUQ,SAAS,8BACtCC,EAAcF,EAAiBG,KAAK,iBACpCC,EAAWF,EAAYG,OACvBC,EAAY9C,EAAE,0DAA0D+C,KAAK,KAAM7C,EAAQ8C,WAAW,gBAAgBH,KAAKD,EAC/HF,GAAYG,KAAKC,EAEjB,IAAIG,GAASH,EAAUI,SAAShB,EAAKxB,SAASuC,MAC9CA,GAAOE,GAAG,gBAAiB,WACvB/C,EAAK,oBAAqB6B,GAEc,kBAA7BvB,GAAQ0C,kBACf1C,EAAQ0C,iBAAiBC,KAAKnD,EAAS+B,EAAWgB,EAAQlB,KAIlEe,EAAUK,GAAG,QAAS,SAAUG,GACc,kBAA/B5C,GAAQ6C,oBACf7C,EAAQ6C,mBAAmBF,KAAKnD,EAASoD,EAAGrB,EAAWF,GAGjB,kBAA/BrB,GAAQ8C,oBACf9C,EAAQ8C,mBAAmBH,KAAKnD,EAASoD,EAAGtB,EAAWD,GAGnB,kBAA7BrB,GAAQ+C,kBACf/C,EAAQ+C,iBAAiBJ,KAAKnD,EAASoD,EAAGvB,MAKtD2B,WAAY,SAAUzB,EAAW/B,GAC7BE,EAAK,8BAA+B6B,EAEpC,IAAIO,GAAmBP,EAAUU,KAAK,8BAClCD,EAAcF,EAAiBG,KAAK,iBACpCG,EAAYN,EAAiBG,KAAK,gBAClCgB,EAAKb,EAAUC,KAAK,MACpBE,EAAS3C,SAASsD,UAAUD,EAMhC,OAJIV,IACAP,EAAYG,KAAKI,EAAOY,WAGrBrB,EAAiBK,QAG5BiB,QAAS,SAAU7B,EAAW/B,GAC1BE,EAAK,2BAA4B6B,EAEjC,IAAI0B,GAAK1B,EAAUU,KAAK,gBAAgBI,KAAK,MACzCE,EAAS3C,SAASsD,UAAUD,EAC5BV,IACAA,EAAOa,WAIfC,gBAAgB,EAEhBC,aAAc,gBAEdC,gBAAiB,SAAUC,EAAMhE,GAC7BE,EAAK,oCACL8D,EAAKC,OACD,yCAIJD,EAAOA,EAAKvB,KAAK,QACjBxC,EAAUiE,6BAA6BF,EAAMhE,IAGjDmE,gBAAiB,SAAUH,EAAMjC,EAAW/B,GACxCE,EAAK,mCAAoC6B,GAEzC9B,EAAUmE,6BAA6BJ,EAAMjC,EAAW/B,MAIjEqE","file":"keditor-edm-component-text-0.0.0.min.js","sourcesContent":["/**\r\n * KEditor Text Component\r\n * @copyright: Kademi (http://kademi.co)\r\n * @author: Kademi (http://kademi.co)\r\n * @version: @{version}\r\n * @dependencies: $, $.fn.draggable, $.fn.droppable, $.fn.sortable, Bootstrap, FontAwesome (optional)\r\n */\r\n(function ($) {\r\n    var KEditor = $.keditor;\r\n    var edmEditor = $.edmEditor;\r\n    var flog = KEditor.log;\r\n\r\n    CKEDITOR.disableAutoInline = true;\r\n    CKEDITOR.isEDM = true;\r\n\r\n    // Text component\r\n    // ---------------------------------------------------------------------\r\n    KEditor.components['text'] = {\r\n        options: {\r\n            title: false,\r\n            allowedContent: true, // DISABLES Advanced Content Filter. This is so templates with classes are allowed through\r\n            bodyId: 'editor',\r\n            templates_replaceContent: false,\r\n            toolbarGroups: [\r\n                {name: 'document', groups: ['mode', 'document', 'doctools']},\r\n                {name: 'editing', groups: ['find', 'selection', 'spellchecker', 'editing']},\r\n                {name: 'forms', groups: ['forms']},\r\n                {name: 'basicstyles', groups: ['basicstyles', 'cleanup']},\r\n                {name: 'paragraph', groups: ['list', 'indent', 'blocks', 'align', 'bidi', 'paragraph']},\r\n                {name: 'links', groups: ['links']},\r\n                {name: 'insert', groups: ['insert']},\r\n                '/',\r\n                {name: 'clipboard', groups: ['clipboard', 'undo']},\r\n                {name: 'styles', groups: ['styles']},\r\n                {name: 'colors', groups: ['colors']},\r\n                {name: 'tools', groups: ['tools']},\r\n                {name: 'others', groups: ['others']},\r\n                {name: 'about', groups: ['about']}\r\n            ],\r\n            extraPlugins: 'sourcedialog,lineheight,onchange,fuse-image',\r\n            removePlugins: 'table,magicline,tabletools',\r\n            removeButtons: 'Save,NewPage,Preview,Print,Templates,PasteText,PasteFromWord,Find,Replace,SelectAll,Scayt,Form,HiddenField,ImageButton,Button,Select,Textarea,TextField,Radio,Checkbox,Outdent,Indent,Blockquote,CreateDiv,Language,Table,HorizontalRule,Smiley,SpecialChar,PageBreak,Iframe,Styles,Maximize,About,ShowBlocks,BidiLtr,BidiRtl,Flash,Image,Subscript,Superscript,Anchor',\r\n            enterMode: CKEDITOR.ENTER_DIV,\r\n            forceEnterMode: true,\r\n            filebrowserBrowseUrl: '/static/fckfilemanager/browser/default/browser.html?Type=Image&Connector=/fck_connector.html',\r\n            filebrowserUploadUrl: '/uploader/upload',\r\n            format_tags: 'p;h1;h2;h3;h4;h5;h6',\r\n            stylesSet: 'myStyles:' + stylesPath,\r\n            line_height: '1;1.2;1.5;2;2.2;2.5'\r\n        },\r\n\r\n        init: function (contentArea, container, component, keditor) {\r\n            flog('init \"text\" component', component);\r\n\r\n            var self = this;\r\n            var options = keditor.options;\r\n            self.options.skin = editorSkin;\r\n            self.options.templates_files = [templatesPath];\r\n\r\n            var componentContent = component.children('.keditor-component-content');\r\n            var textWrapper = componentContent.find('.text-wrapper');\r\n            var textHtml = textWrapper.html();\r\n            var editorDiv = $('<div class=\"text-editor\" contenteditable=\"true\"></div>').attr('id', keditor.generateId('text-editor')).html(textHtml);\r\n            textWrapper.html(editorDiv);\r\n\r\n            var editor = editorDiv.ckeditor(self.options).editor;\r\n            editor.on('instanceReady', function () {\r\n                flog('CKEditor is ready', component);\r\n\r\n                if (typeof options.onComponentReady === 'function') {\r\n                    options.onComponentReady.call(keditor, component, editor, contentArea);\r\n                }\r\n            });\r\n\r\n            editorDiv.on('input', function (e) {\r\n                if (typeof options.onComponentChanged === 'function') {\r\n                    options.onComponentChanged.call(keditor, e, component, contentArea);\r\n                }\r\n\r\n                if (typeof options.onContainerChanged === 'function') {\r\n                    options.onContainerChanged.call(keditor, e, container, contentArea);\r\n                }\r\n\r\n                if (typeof options.onContentChanged === 'function') {\r\n                    options.onContentChanged.call(keditor, e, contentArea);\r\n                }\r\n            });\r\n        },\r\n\r\n        getContent: function (component, keditor) {\r\n            flog('getContent \"text\" component', component);\r\n\r\n            var componentContent = component.find('.keditor-component-content');\r\n            var textWrapper = componentContent.find('.text-wrapper');\r\n            var editorDiv = componentContent.find('.text-editor');\r\n            var id = editorDiv.attr('id');\r\n            var editor = CKEDITOR.instances[id];\r\n\r\n            if (editor) {\r\n                textWrapper.html(editor.getData());\r\n            }\r\n\r\n            return componentContent.html();\r\n        },\r\n\r\n        destroy: function (component, keditor) {\r\n            flog('destroy \"text\" component', component);\r\n\r\n            var id = component.find('.text-editor').attr('id');\r\n            var editor = CKEDITOR.instances[id];\r\n            if (editor) {\r\n                editor.destroy();\r\n            }\r\n        },\r\n\r\n        settingEnabled: true,\r\n\r\n        settingTitle: 'Text Settings',\r\n\r\n        initSettingForm: function (form, keditor) {\r\n            flog('initSettingForm \"text\" component');\r\n            form.append(\r\n                '<form class=\"form-horizontal\">' +\r\n                '</form>'\r\n            );\r\n\r\n            form = form.find('form');\r\n            edmEditor.initDefaultComponentControls(form, keditor);\r\n        },\r\n\r\n        showSettingForm: function (form, component, keditor) {\r\n            flog('showSettingForm \"text\" component', component);\r\n    \r\n            edmEditor.showDefaultComponentControls(form, component, keditor);\r\n        }\r\n    };\r\n\r\n})(jQuery);\r\n"],"sourceRoot":"/source/"}