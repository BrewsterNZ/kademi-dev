{"version":3,"sources":["keditor-component-form-0.0.0.js"],"names":["$","KEditor","keditor","flog","log","components","initFormBuilder","component","self","this","getScriptOnce","formBuilderArea","find","formData","formContent","prepend","btnEditForm","btnPreviewForm","formBuilder","disableInjectedStyle","showActionButtons","dataType","html","disableFields","disabledAttrs","typeUserDisabledAttrs","checkbox-group","on","e","preventDefault","hasClass","show","hide","addClass","removeClass","renderForm","data","formRender","actions","getData","children","each","div","dataGrid","attr","split","wrap","label","input","subDiv","length","init","contentArea","container","componentContent","append","getContent","remove","settingEnabled","settingTitle","initSettingForm","form","ajax","url","type","success","resp","getSettingComponent","value","css","showSettingForm","layout","val","jQuery"],"mappings":"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","file":"keditor-component-form-0.0.0.min.js","sourcesContent":["/**\n * KEditor Form Component\n * @copyright: Kademi (http://kademi.co)\n * @author: Kademi (http://kademi.co)\n * @version: @{version}\n * @dependencies: $, $.fn.draggable, $.fn.droppable, $.fn.sortable, Bootstrap, FontAwesome (optional)\n */\n(function ($) {\n    var KEditor = $.keditor;\n    var flog = KEditor.log;\n    \n    KEditor.components['form'] = {\n        initFormBuilder: function (component) {\n            var self = this;\n            \n            $.getScriptOnce('/static/formBuilder/2.5.3/form-builder.min.js', function () {\n                $.getScriptOnce('/static/formBuilder/2.5.3/form-render.min.js', function () {\n                    var formBuilderArea = component.find('.form-builder-area');\n                    var formData = component.find('.form-data');\n                    var formContent = component.find('.form-content');\n                    \n                    component.find('.keditor-component-content').prepend(\n                        '<p class=\"form-builder-tools\" style=\"text-align: right;\">' +\n                        '    <a href=\"#\" class=\"btn btn-primary btn-preview-form\">Preview form</a> ' +\n                        '    <a href=\"#\" class=\"btn btn-info btn-edit-form disabled\">Edit form</a>' +\n                        '</p>'\n                    );\n                    \n                    var btnEditForm = component.find('.btn-edit-form');\n                    var btnPreviewForm = component.find('.btn-preview-form');\n                    \n                    formBuilderArea.formBuilder({\n                        disableInjectedStyle: true,\n                        showActionButtons: false,\n                        dataType: 'json',\n                        formData: formData.html(),\n                        disableFields: [\n                            'autocomplete',\n                            'paragraph',\n                            'header'\n                        ],\n                        disabledAttrs: ['access'],\n                        \n                        typeUserDisabledAttrs: {\n                            'checkbox-group': [\n                                'toggle',\n                                'inline'\n                            ]\n                        }\n                    });\n                    \n                    btnEditForm.on('click', function (e) {\n                        e.preventDefault();\n                        \n                        if (!btnEditForm.hasClass('disabled')) {\n                            formBuilderArea.show();\n                            formContent.hide();\n                            btnEditForm.addClass('disabled');\n                            btnPreviewForm.removeClass('disabled');\n                        }\n                    });\n                    \n                    btnPreviewForm.on('click', function (e) {\n                        e.preventDefault();\n                        \n                        if (!btnPreviewForm.hasClass('disabled')) {\n                            self.renderForm(component);\n                            \n                            formBuilderArea.hide();\n                            formContent.show();\n                            btnEditForm.removeClass('disabled');\n                            btnPreviewForm.addClass('disabled');\n                        }\n                    });\n                })\n            });\n        },\n        \n        renderForm: function (component, formBuilder) {\n            var formContent = component.find('.form-content');\n            \n            if (!formBuilder) {\n                var formBuilderArea = component.find('.form-builder-area');\n                formBuilder = formBuilderArea.data('formBuilder');\n            }\n            \n            formContent.formRender({\n                dataType: 'json',\n                formData: formBuilder.actions.getData('json')\n            });\n            \n            if (formContent.hasClass('form-horizontal')) {\n                formContent.children('div').each(function () {\n                    var div = $(this);\n                    var dataGrid = formContent.attr('data-grid') || '4-8';\n                    dataGrid = dataGrid.split('-');\n                    \n                    if (div.attr('class')) {\n                        if (div.hasClass('fb-button')) {\n                            div.find('button').wrap('<div class=\"col-sm-' + dataGrid[1] + ' col-sm-offset-' + dataGrid[0] + '\"></div>');\n                        } else {\n                            var label = div.children('label');\n                            var input = div.children('input, select, textarea');\n                            var subDiv = div.children('div');\n                            \n                            label.addClass('control-label col-sm-' + dataGrid[0]);\n                            \n                            if (subDiv.length > 0) {\n                                subDiv.addClass('col-sm-' + dataGrid[1]);\n                            } else {\n                                input.addClass('form-control').wrap('<div class=\"col-sm-' + dataGrid[1] + '\"></div>');\n                            }\n                        }\n                    }\n                });\n            }\n        },\n        \n        init: function (contentArea, container, component, keditor) {\n            flog('init \"form\" component', component);\n            \n            var componentContent = component.find('.keditor-component-content');\n            var formBuilder = component.find('.form-builder-area');\n            var formContent = component.find('.form-content');\n            var formData = component.find('.form-data');\n            \n            if (formData.length === 0) {\n                componentContent.append('<div class=\"form-data\" style=\"display: none !important;\"></div>')\n            }\n            \n            if (formContent.length === 0) {\n                componentContent.append('<form class=\"form-content\" style=\"display: none !important;\"></form>')\n            } else {\n                formContent.hide()\n            }\n            \n            if (formBuilder.length === 0) {\n                formBuilder = $('<div class=\"form-builder-area clearfix\"></div>');\n                componentContent.append(formBuilder);\n            }\n            \n            this.initFormBuilder(component);\n        },\n        \n        getContent: function (component, keditor) {\n            flog('getContent \"form\" component', component);\n            \n            var self = this;\n            var componentContent = component.find('.keditor-component-content');\n            var formData = component.find('.form-data');\n            var formBuilderArea = $('#' + component.attr('id')).find('.form-builder-area');\n            var formBuilder = formBuilderArea.data('formBuilder');\n            \n            self.renderForm(component, formBuilder);\n            formData.html(formBuilder.actions.getData('json'));\n            component.find('.form-builder-area, .form-builder-tools').remove();\n            component.find('.form-content').show();\n            \n            return componentContent.html();\n        },\n        \n        settingEnabled: true,\n        \n        settingTitle: 'Form Settings',\n        \n        initSettingForm: function (form, keditor) {\n            flog('initSettingForm \"form\" component');\n            \n            var self = this;\n            \n            return $.ajax({\n                url: '/static/keditor/componentFormSettings.html',\n                type: 'get',\n                dataType: 'HTML',\n                success: function (resp) {\n                    form.html(resp);\n                    \n                    form.find('.txt-form-action').on('change', function () {\n                        var component = keditor.getSettingComponent();\n                        var formContent = component.find('.form-content');\n                        \n                        formContent.attr('action', this.value);\n                    });\n                    \n                    form.find('.select-method').on('change', function () {\n                        var component = keditor.getSettingComponent();\n                        var formContent = component.find('.form-content');\n                        \n                        formContent.attr('action', this.value);\n                    });\n                    \n                    form.find('.select-enctype').on('change', function () {\n                        var component = keditor.getSettingComponent();\n                        var formContent = component.find('.form-content');\n                        \n                        formContent.attr('enctype', this.value);\n                    });\n                    \n                    form.find('.select-layout').on('change', function () {\n                        var component = keditor.getSettingComponent();\n                        var formContent = component.find('.form-content');\n                        \n                        formContent.removeClass('form-inline form-horizontal');\n                        if (this.value) {\n                            formContent.addClass(this.value);\n                        }\n                        self.renderForm(component);\n                        form.find('.select-grid-wrapper').css('display', this.value === 'form-horizontal' ? 'block' : 'none');\n                    });\n                    \n                    form.find('.select-grid').on('change', function () {\n                        var component = keditor.getSettingComponent();\n                        var formContent = component.find('.form-content');\n                        \n                        formContent.attr('data-grid', this.value);\n                        self.renderForm(component);\n                    });\n                }\n            });\n        },\n        \n        showSettingForm: function (form, component, keditor) {\n            flog('showSettingForm \"form\" component', component);\n            var formContent = component.find('.form-content');\n            \n            var layout = '';\n            if (formContent.hasClass('form-inline')) {\n                layout = 'form-inline';\n            } else if (formContent.hasClass('form-horizontal')) {\n                layout = 'form-horizontal';\n            }\n            \n            form.find('.txt-form-action').val(formContent.attr('action') || '');\n            form.find('.select-method').val(formContent.attr('method') || 'get');\n            form.find('.select-enctype').val(formContent.attr('enctype'));\n            form.find('.select-layout').val(layout);\n            form.find('.select-grid-wrapper').css('display', layout === 'form-horizontal' ? 'block' : 'none');\n            form.find('.select-grid').val(formContent.attr('data-grid') || '4-8');\n        }\n    };\n    \n})(jQuery);\n"]}