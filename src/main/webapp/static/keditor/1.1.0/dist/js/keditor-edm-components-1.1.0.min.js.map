{"version":3,"sources":["keditor-edm-components-1.1.0.js"],"names":["$","KEditor","keditor","flog","log","components","options","title","allowedContent","bodyId","templates_replaceContent","toolbarGroups","name","groups","extraPlugins","removePlugins","removeButtons","enterMode","CKEDITOR","ENTER_DIV","forceEnterMode","filebrowserBrowseUrl","filebrowserUploadUrl","format_tags","stylesSet","stylesPath","line_height","init","contentArea","container","component","self","this","componentContent","children","prop","on","e","onComponentChanged","call","onContainerChanged","onContentChanged","skin","editorSkin","templates_files","templatesPath","editor","ckeditor","onComponentReady","getContent","find","id","attr","instances","getData","html","destroy","jQuery"],"mappings":"CAOA,SAAWA,GACP,GAAIC,GAAUD,EAAEE,QACZC,EAAOF,EAAQG,GAInBH,GAAQI,WAAiB,MACrBC,SACIC,OAAO,EACPC,gBAAgB,EAChBC,OAAQ,SACRC,0BAA0B,EAC1BC,gBACKC,KAAM,WAAYC,QAAS,OAAQ,WAAY,cAC/CD,KAAM,UAAWC,QAAS,OAAQ,YAAa,eAAgB,aAC/DD,KAAM,QAASC,QAAS,WACxBD,KAAM,cAAeC,QAAS,cAAe,aAC7CD,KAAM,YAAaC,QAAS,OAAQ,SAAU,SAAU,QAAS,OAAQ,eACzED,KAAM,QAASC,QAAS,WACxBD,KAAM,SAAUC,QAAS,WAC1B,KACCD,KAAM,YAAaC,QAAS,YAAa,UACzCD,KAAM,SAAUC,QAAS,YACzBD,KAAM,SAAUC,QAAS,YACzBD,KAAM,QAASC,QAAS,WACxBD,KAAM,SAAUC,QAAS,YACzBD,KAAM,QAASC,QAAS,WAE7BC,aAAc,0DACdC,cAAe,6BACfC,cAAe,iXACfC,UAAWC,SAASC,UACpBC,gBAAgB,EAChBC,qBAAsB,+FACtBC,qBAAsB,mBACtBC,YAAa,sBACbC,UAAW,YAAcC,WACzBC,YAAa,uBAGjBC,KAAM,SAAUC,EAAaC,EAAWC,EAAWxB,GAC/CH,EAAK,wBAAyB2B,EAC9B,IAAIC,GAAOC,KAEPC,EAAmBH,EAAUI,SAAS,6BAC1CD,GAAiBE,KAAK,mBAAmB,GAEzCF,EAAiBG,GAAG,QAAS,SAAUC,GACO,kBAA/B/B,GAAQgC,oBACfhC,EAAQgC,mBAAmBC,KAAKX,EAAaS,EAAGP,GAGV,kBAA/BxB,GAAQkC,oBACflC,EAAQkC,mBAAmBD,KAAKX,EAAaS,EAAGR,GAGZ,kBAA7BvB,GAAQmC,kBACfnC,EAAQmC,iBAAiBF,KAAKX,EAAaS,KAInDN,EAAKzB,QAAQoC,KAAOC,WACpBZ,EAAKzB,QAAQsC,iBAAmBC,cAEhC,IAAIC,GAASb,EAAiBc,SAAShB,EAAKzB,SAASwC,MACrDA,GAAOV,GAAG,gBAAiB,WACvBjC,EAAK,oBAAqB2B,GAEc,kBAA7BxB,GAAQ0C,kBACf1C,EAAQ0C,iBAAiBT,KAAKX,EAAaE,EAAWgB,MAKlEG,WAAY,SAAUnB,EAAWxB,GAC7BH,EAAK,8BAA+B2B,EAEpC,IAAIG,GAAmBH,EAAUoB,KAAK,8BAClCC,EAAKlB,EAAiBmB,KAAK,MAC3BN,EAAS5B,SAASmC,UAAUF,EAChC,OAAIL,GACOA,EAAOQ,UAEPrB,EAAiBsB,QAIhCC,QAAS,SAAU1B,EAAWxB,GAC1BH,EAAK,2BAA4B2B,EAEjC,IAAIqB,GAAKrB,EAAUoB,KAAK,8BAA8BE,KAAK,MACvDN,EAAS5B,SAASmC,UAAUF,EAC5BL,IACAA,EAAOU,aAKpBC","file":"keditor-edm-components-1.1.0.min.js","sourcesContent":["/**\r\n * KEditor Text Component\r\n * @copyright: Kademi (http://kademi.co)\r\n * @author: Kademi (http://kademi.co)\r\n * @version: 1.1.0\r\n * @dependencies: $, $.fn.draggable, $.fn.droppable, $.fn.sortable, Bootstrap, FontAwesome (optional)\r\n */\r\n(function ($) {\r\n    var KEditor = $.keditor;\r\n    var flog = KEditor.log;\r\n\r\n    // Text component\r\n    // ---------------------------------------------------------------------\r\n    KEditor.components['text'] = {\r\n        options: {\r\n            title: false,\r\n            allowedContent: true, // DISABLES Advanced Content Filter. This is so templates with classes are allowed through\r\n            bodyId: 'editor',\r\n            templates_replaceContent: false,\r\n            toolbarGroups: [\r\n                {name: 'document', groups: ['mode', 'document', 'doctools']},\r\n                {name: 'editing', groups: ['find', 'selection', 'spellchecker', 'editing']},\r\n                {name: 'forms', groups: ['forms']},\r\n                {name: 'basicstyles', groups: ['basicstyles', 'cleanup']},\r\n                {name: 'paragraph', groups: ['list', 'indent', 'blocks', 'align', 'bidi', 'paragraph']},\r\n                {name: 'links', groups: ['links']},\r\n                {name: 'insert', groups: ['insert']},\r\n                '/',\r\n                {name: 'clipboard', groups: ['clipboard', 'undo']},\r\n                {name: 'styles', groups: ['styles']},\r\n                {name: 'colors', groups: ['colors']},\r\n                {name: 'tools', groups: ['tools']},\r\n                {name: 'others', groups: ['others']},\r\n                {name: 'about', groups: ['about']}\r\n            ],\r\n            extraPlugins: 'embed_video,fuse-image,sourcedialog,lineheight,onchange',\r\n            removePlugins: 'table,magicline,tabletools',\r\n            removeButtons: 'Save,NewPage,Preview,Print,Templates,PasteText,PasteFromWord,Find,Replace,SelectAll,Scayt,Form,HiddenField,ImageButton,Button,Select,Textarea,TextField,Radio,Checkbox,Outdent,Indent,Blockquote,CreateDiv,Language,Table,HorizontalRule,Smiley,SpecialChar,PageBreak,Iframe,Styles,BGColor,Maximize,About,ShowBlocks,BidiLtr,BidiRtl,Flash,Image,Subscript,Superscript,Anchor',\r\n            enterMode: CKEDITOR.ENTER_DIV,\r\n            forceEnterMode: true,\r\n            filebrowserBrowseUrl: '/static/fckfilemanager/browser/default/browser.html?Type=Image&Connector=/fck_connector.html',\r\n            filebrowserUploadUrl: '/uploader/upload',\r\n            format_tags: 'p;h1;h2;h3;h4;h5;h6',\r\n            stylesSet: 'myStyles:' + stylesPath,\r\n            line_height: '1;1.2;1.5;2;2.2;2.5'\r\n        },\r\n\r\n        init: function (contentArea, container, component, options) {\r\n            flog('init \"text\" component', component);\r\n            var self = this;\r\n\r\n            var componentContent = component.children('.keditor-component-content');\r\n            componentContent.prop('contenteditable', true);\r\n\r\n            componentContent.on('input', function (e) {\r\n                if (typeof options.onComponentChanged === 'function') {\r\n                    options.onComponentChanged.call(contentArea, e, component);\r\n                }\r\n\r\n                if (typeof options.onContainerChanged === 'function') {\r\n                    options.onContainerChanged.call(contentArea, e, container);\r\n                }\r\n\r\n                if (typeof options.onContentChanged === 'function') {\r\n                    options.onContentChanged.call(contentArea, e);\r\n                }\r\n            });\r\n\r\n            self.options.skin = editorSkin;\r\n            self.options.templates_files = [templatesPath];\r\n\r\n            var editor = componentContent.ckeditor(self.options).editor;\r\n            editor.on('instanceReady', function () {\r\n                flog('CKEditor is ready', component);\r\n\r\n                if (typeof options.onComponentReady === 'function') {\r\n                    options.onComponentReady.call(contentArea, component, editor);\r\n                }\r\n            });\r\n        },\r\n\r\n        getContent: function (component, options) {\r\n            flog('getContent \"text\" component', component);\r\n\r\n            var componentContent = component.find('.keditor-component-content');\r\n            var id = componentContent.attr('id');\r\n            var editor = CKEDITOR.instances[id];\r\n            if (editor) {\r\n                return editor.getData();\r\n            } else {\r\n                return componentContent.html();\r\n            }\r\n        },\r\n\r\n        destroy: function (component, options) {\r\n            flog('destroy \"text\" component', component);\r\n\r\n            var id = component.find('.keditor-component-content').attr('id');\r\n            var editor = CKEDITOR.instances[id];\r\n            if (editor) {\r\n                editor.destroy();\r\n            }\r\n        }\r\n    };\r\n\r\n})(jQuery);\r\n"],"sourceRoot":"/source/"}