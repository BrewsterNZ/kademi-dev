{"version":3,"sources":["keditor-1.0.1.js"],"names":["$","flog","fn","keditor","debug","navigator","appName","arguments","length","console","log","error","msg","Error","draggable","droppable","sortable","ckeditor","CKEDITOR","disableAutoInline","method","methods","apply","this","Array","prototype","slice","call","init","version","DEFAULTS","allowedContent","bodyId","templates_replaceContent","enterMode","forceEnterMode","format_tags","format_p2","element","attributes","class","removePlugins","minimumChangeMilliseconds","snippetsUrl","snippetsListId","onContentChanged","event","onSnippetDropped","newSection","droppedSnippet","onBeforeSectionDeleted","btnRemove","selectedSection","onSectionChanged","changedSection","onSectionDuplicated","originalSection","onSectionSelected","KEditor","initSnippet","contentArea","options","body","document","addClass","append","initSnippetToggler","after","ajax","type","dataType","url","success","resp","renderSnippets","initSnippetsActions","jqXHR","on","e","preventDefault","icon","find","hasClass","removeClass","attr","snippetsHtml","snippetsContentHtml","html","each","i","div","content","trim","previewUrl","snippetsList","niceScroll","cursorcolor","cursorwidth","railpadding","top","right","left","bottom","cursorborder","contentAreaId","helper","revert","connectToSortable","cursorAt","start","blur","initContentArea","accept","tolerance","greedy","handle","items","connectWith","axis","sort","receive","ui","item","snippetContent","section","replaceWith","initContentEditable","wrap","keditorSection","parent","getClickElement","confirm","closest","id","instances","destroy","remove","btnDuplicate","selectedSectionContent","getSectionContent","selector","target","is","sectionContent","prop","Date","getTime","getData","data","extend","getContent","jQuery"],"mappings":"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","file":"keditor-1.0.1.min.js","sourcesContent":["/*!\r\n * KEditor - Kademi content editor\r\n * @copyright: Kademi (http://kademi.co)\r\n * @author: Kademi (http://kademi.co)\r\n * @version: 1.0.1\r\n * @dependencies: $, $.fn.draggable, $.fn.droppable, $.fn.sortable, $.fn.ckeditor, FontAwesome\r\n *\r\n * Configuration:\r\n * @option {Object} ckeditor Configuration for CKEditor. See at http://docs.ckeditor.com/#!/api/CKEDITOR.options\r\n * @option {String} snippetsUrl Url to snippets file\r\n * @option {String} [snippetsListId=\"keditor-snippets-list\"] Id of element which contains snippets. As default, value is \"keditor-snippets-list\" and KEditor will render snippets sidebar automatically. If you specific other id, only snippets will rendered and put into your element\r\n * @option {Function} onContentChanged Callback will be called when content is changed. Arguments: event\r\n * @option {Function} onSnippetDropped Callback will be called when snippet is dropped into content area. Arguments: event, newSection, droppedSnippet\r\n * @option {Function} onBeforeSectionDeleted Callback will be called before selected section is deleted. Arguments: event, btnRemove, selectedSection\r\n * @option {Function} onSectionChanged Callback will be called when content of section is changed. Arguments: event, changedSection\r\n * @option {Function} onSectionDuplicated Callback will be called when section is duplicated. Arguments: event, originalSection, newSection\r\n * @option {Function} onSectionSelected Callback will be called when section is selected. Arguments: event, selectedSection\r\n */\r\n(function ($) {\r\n    // Log function will print log message when \"$.fn.keditor.debug\" equals \"true\"\r\n    var flog = function () {\r\n        if (typeof (console) !== 'undefined' && $.fn.keditor.debug === true) {\r\n            if (navigator.appName == 'Microsoft Internet Explorer') {\r\n                // BM: Previous used JSON, but that crashed IE sometimes. So this is pretty crap, but at least safer\r\n                if (arguments.length == 1) {\r\n                    console.log('[KEditor]', arguments[0]);\r\n                } else if (arguments.length == 2) {\r\n                    console.log('[KEditor]', arguments[0], arguments[1]);\r\n                } else if (arguments.length > 2) {\r\n                    console.log('[KEditor]', arguments[0], arguments[1], arguments[2]);\r\n                }\r\n            } else {\r\n                console.log(['KEditor'], arguments);\r\n            }\r\n        }\r\n    };\r\n\r\n    // Throw error message\r\n    var error = function (msg) {\r\n        throw new Error('[KEditor] ' + msg);\r\n    };\r\n\r\n    // Check dependencies\r\n    if (!$.fn.draggable) {\r\n        error('$.fn.draggable does not exist. Please import $.fn.draggable into your document for continue using KEditor.');\r\n    }\r\n    if (!$.fn.droppable) {\r\n        error('$.fn.droppable does not exist. Please import $.fn.droppable into your document for continue using KEditor.');\r\n    }\r\n    if (!$.fn.sortable) {\r\n        error('$.fn.sortable does not exist. Please import $.fn.sortable into your document for continue using KEditor.');\r\n    }\r\n    if (!$.fn.ckeditor) {\r\n        error('$.fn.ckeditor does not exist. Please import CKEditor and its jQuery adapter into your document for continue using KEditor.');\r\n    } else {\r\n        // Disable CKEditor init automatically with element which has \"contenteditable=true\"\r\n        CKEDITOR.disableAutoInline = true;\r\n    }\r\n\r\n    $.fn.keditor = function (method) {\r\n        if (methods[method] && method !== 'init') {\r\n            return methods[method].apply(this, Array.prototype.slice.call(arguments, 1));\r\n        } else if (typeof method === 'object' || !method) {\r\n            return methods.init.apply(this, arguments);\r\n        } else {\r\n            throw new Error('[KEditor] Method ' + method + ' does not exist on jquery.keditor');\r\n        }\r\n    };\r\n\r\n    // Debug mode\r\n    $.fn.keditor.debug = true;\r\n\r\n    // Version of KEditor\r\n    $.fn.keditor.version = '1.0.0';\r\n\r\n    // Default configuration of KEditor\r\n    var DEFAULTS = $.fn.keditor.DEFAULTS = {\r\n        ckeditor: {\r\n            allowedContent: true, // DISABLES Advanced Content Filter. This is so templates with classes are allowed through\r\n            bodyId: 'editor',\r\n            templates_replaceContent: false,\r\n            enterMode: 'P',\r\n            forceEnterMode: true,\r\n            format_tags: 'p;h1;h2;h3;h4;h5;h6', // removed p2\r\n            format_p2: {\r\n                element: 'p',\r\n                attributes: {\r\n                    'class': 'lessSpace'\r\n                }\r\n            },\r\n            removePlugins: 'magicline',\r\n            minimumChangeMilliseconds: 100\r\n        },\r\n        snippetsUrl: 'snippets/default/snippets.html',\r\n        snippetsListId: 'keditor-snippets-list',\r\n        onContentChanged: function (event) {\r\n        },\r\n        onSnippetDropped: function (event, newSection, droppedSnippet) {\r\n        },\r\n        onBeforeSectionDeleted: function (event, btnRemove, selectedSection) {\r\n        },\r\n        onSectionChanged: function (event, changedSection) {\r\n        },\r\n        onSectionDuplicated: function (event, originalSection, newSection) {\r\n        },\r\n        onSectionSelected: function (event, selectedSection) {\r\n        }\r\n    };\r\n\r\n    // Object KEditor\r\n    var KEditor = {\r\n        initSnippet: function (contentArea, options) {\r\n            flog('initSnippetToggler', contentArea, options);\r\n\r\n            var body = $(document.body);\r\n            body.addClass('opened-keditor-snippets');\r\n\r\n            if (options.snippetsListId === DEFAULTS.snippetsListId) {\r\n                flog('Render default KEditor snippet container');\r\n\r\n                body.append(\r\n                    '<div id=\"keditor-snippets-container\">' +\r\n                    '    <a id=\"keditor-snippets-toggler\"><i class=\"fa fa-chevron-right\"></i></a>' +\r\n                    '    <div id=\"keditor-snippets-list\" class=\"clearfix\"></div>' +\r\n                    '    <div id=\"keditor-snippets-content\" style=\"display: none\"></div>' +\r\n                    '</div>'\r\n                );\r\n                KEditor.initSnippetToggler();\r\n            } else {\r\n                flog('Render KEditor snippets content after custom snippets list with id=\"' + options.snippetsListId + '\"');\r\n                $('#' + options.snippetsListId).after('<div id=\"keditor-snippets-content\" style=\"display: none\"></div>');\r\n            }\r\n\r\n            if (typeof options.snippetsUrl === 'string' && options.snippetsUrl.length > 0) {\r\n                flog('Getting snippets form \"' + options.snippetsUrl + '\"...');\r\n\r\n                $.ajax({\r\n                    type: 'get',\r\n                    dataType: 'html',\r\n                    url: options.snippetsUrl,\r\n                    success: function (resp) {\r\n                        flog('Success in getting snippets', resp);\r\n\r\n                        KEditor.renderSnippets(resp, options);\r\n                        KEditor.initSnippetsActions(contentArea, options);\r\n                    },\r\n                    error: function (jqXHR) {\r\n                        flog('Error when getting snippets', jqXHR);\r\n                    }\r\n                });\r\n            } else {\r\n                error('\"snippetsUrl\" must be not null!');\r\n            }\r\n        },\r\n\r\n        initSnippetToggler: function () {\r\n            flog('initSnippetToggler');\r\n\r\n            var body = $(document.body);\r\n\r\n            $('#keditor-snippets-toggler').on('click', function (e) {\r\n                e.preventDefault();\r\n\r\n                var icon = $(this).find('i');\r\n                if (body.hasClass('opened-keditor-snippets')) {\r\n                    body.removeClass('opened-keditor-snippets');\r\n                    icon.attr('class', 'fa fa-chevron-left')\r\n                } else {\r\n                    body.addClass('opened-keditor-snippets');\r\n                    icon.attr('class', 'fa fa-chevron-right')\r\n                }\r\n            });\r\n        },\r\n\r\n        renderSnippets: function (resp, options) {\r\n            flog('renderSnippets', resp, options);\r\n\r\n            var snippetsHtml = '';\r\n            var snippetsContentHtml = '';\r\n\r\n            $('<div />').html(resp).find('> div').each(function (i) {\r\n                var div = $(this);\r\n                var content = div.html().trim();\r\n                var previewUrl = div.attr('data-preview');\r\n\r\n                flog('Snippet #' + i, previewUrl, content);\r\n\r\n                snippetsHtml += '<section class=\"keditor-snippet\" data-snippet=\"#keditor-snippet-' + i + '\">';\r\n                snippetsHtml += '   <img class=\"keditor-snippet-preview\" src=\"' + previewUrl + '\" />';\r\n                snippetsHtml += '</section>';\r\n\r\n                snippetsContentHtml += '<div id=\"keditor-snippet-' + i + '\" style=\"display: none;\">' + content + '</div>';\r\n            });\r\n\r\n            $('#' + options.snippetsListId).html(snippetsHtml);\r\n            $('#keditor-snippets-content').html(snippetsContentHtml);\r\n        },\r\n\r\n        initSnippetsActions: function (contentArea, options) {\r\n            flog('initSnippetsActions', contentArea, options);\r\n\r\n            var snippetsList = $('#' + options.snippetsListId);\r\n\r\n            if ($.fn.niceScroll) {\r\n                flog('Initialize $.fn.niceScroll for snippets list');\r\n                snippetsList.niceScroll({\r\n                    cursorcolor: '#999',\r\n                    cursorwidth: 6,\r\n                    railpadding: {\r\n                        top: 0,\r\n                        right: 0,\r\n                        left: 0,\r\n                        bottom: 0\r\n                    },\r\n                    cursorborder: ''\r\n                });\r\n            } else {\r\n                flog('$.fn.niceScroll does not exist. Use default sidebar.');\r\n            }\r\n\r\n            var contentAreaId = contentArea.attr('id');\r\n            flog('Initialize $.fn.draggable for snippets list which connect to #' + contentAreaId);\r\n            snippetsList.find('.keditor-snippet').draggable({\r\n                helper: 'clone',\r\n                revert: 'invalid',\r\n                connectToSortable: '#' + contentAreaId,\r\n                cursorAt: {\r\n                    top: 0,\r\n                    left: 0\r\n                },\r\n                start: function () {\r\n                    $('.keditor-section-content').blur();\r\n                }\r\n            });\r\n        },\r\n\r\n        initContentArea: function (contentArea, options) {\r\n            flog('initContentArea', contentArea, options);\r\n\r\n            var body = $(document.body);\r\n            var contentAreaId = contentArea.attr('id');\r\n            contentArea.addClass('keditor-content-area');\r\n\r\n            flog('Initialize $.fn.droppable for content area');\r\n            contentArea.droppable({\r\n                accept: '.keditor-snippet',\r\n                tolerance: 'pointer',\r\n                greedy: true\r\n            });\r\n\r\n            flog('Initialize $.fn.sortable for content area');\r\n            contentArea.sortable({\r\n                handle: '.btn-section-reposition',\r\n                items: '> section',\r\n                connectWith: '#' + contentAreaId,\r\n                axis: 'y',\r\n                sort: function () {\r\n                    $(this).removeClass('ui-state-default');\r\n                },\r\n                receive: function (event, ui) {\r\n                    flog('On received snippet', event, ui);\r\n\r\n                    var helper = ui.helper;\r\n                    var item = ui.item;\r\n                    var snippetContent = $(item.attr('data-snippet')).html();\r\n                    flog('Snippet content', snippetContent);\r\n\r\n                    var section = $(\r\n                        '<section class=\"keditor-section\">' +\r\n                        '   <section class=\"keditor-section-content\">' + snippetContent + '</section>' +\r\n                        '</section>'\r\n                    );\r\n                    helper.replaceWith(section);\r\n\r\n                    if (typeof options.onSnippetDropped === 'function') {\r\n                        options.onSnippetDropped.call(this, event, section, ui.item);\r\n                    }\r\n\r\n                    KEditor.initContentEditable(section, options);\r\n\r\n                    if (typeof options.onContentChanged === 'function') {\r\n                        options.onContentChanged.call(this, event);\r\n                    }\r\n                }\r\n            });\r\n\r\n            flog('Initialize existing sections in content area');\r\n            contentArea.find('> section').each(function () {\r\n                var section = $(this);\r\n                section.addClass('keditor-section-content');\r\n                section.wrap('<section class=\"keditor-section\"></section>');\r\n\r\n                var keditorSection = section.parent();\r\n                KEditor.initContentEditable(keditorSection, options);\r\n            });\r\n\r\n            body.on('click', function (e) {\r\n                var section = KEditor.getClickElement(e, 'section.keditor-section');\r\n                if (section) {\r\n                    flog('Click on .keditor-section', section);\r\n\r\n                    if (!section.hasClass('showed-keditor-toolbar')) {\r\n                        contentArea.find('.keditor-section.showed-keditor-toolbar').removeClass('showed-keditor-toolbar');\r\n                        section.addClass('showed-keditor-toolbar');\r\n\r\n                        if (typeof options.onSectionSelected === 'function') {\r\n                            options.onSectionSelected.call(this, e, section);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                var btnRemove = KEditor.getClickElement(e, '.btn-section-delete');\r\n                if (btnRemove) {\r\n                    flog('Click on .btn-section-delete', btnRemove);\r\n\r\n                    if (confirm('Are you sure that you want to delete this section? This action can not be undo!')) {\r\n                        var selectedSection = btnRemove.closest('section.keditor-section');\r\n                        if (typeof options.onBeforeSectionDeleted === 'function') {\r\n                            options.onBeforeSectionDeleted.call(this, e, btnRemove, selectedSection);\r\n                        }\r\n\r\n                        var id = selectedSection.find('.keditor-section-content').attr('id');\r\n                        CKEDITOR.instances[id].destroy();\r\n                        selectedSection.remove();\r\n\r\n                        flog('Section is deleted');\r\n\r\n                        if (typeof options.onContentChanged === 'function') {\r\n                            options.onContentChanged.call(this, e);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                var btnDuplicate = KEditor.getClickElement(e, '.btn-section-duplicate');\r\n                if (btnDuplicate) {\r\n                    flog('Click on .btn-section-duplicate', btnDuplicate);\r\n\r\n                    var selectedSection = btnDuplicate.closest('section.keditor-section');\r\n                    var selectedSectionContent = KEditor.getSectionContent(selectedSection);\r\n                    var newSection = $(\r\n                        '<section class=\"keditor-section\">' +\r\n                        '   <section class=\"keditor-section-content\">' + selectedSectionContent + '</section>' +\r\n                        '</section>'\r\n                    );\r\n\r\n                    selectedSection.after(newSection);\r\n                    KEditor.initContentEditable(newSection, options);\r\n\r\n                    flog('Section is duplicated');\r\n\r\n                    if (typeof options.onSectionDuplicated === 'function') {\r\n                        options.onSectionDuplicated.call(this, e, selectedSection, newSection);\r\n                    }\r\n\r\n                    if (typeof options.onContentChanged === 'function') {\r\n                        options.onContentChanged.call(this, e);\r\n                    }\r\n                }\r\n            });\r\n        },\r\n\r\n        getClickElement: function (event, selector) {\r\n            var target = $(event.target);\r\n            var closest = target.closest(selector);\r\n\r\n            if (target.is(selector)) {\r\n                return target;\r\n            } else if (closest.length > 0) {\r\n                return closest;\r\n            } else {\r\n                return null;\r\n            }\r\n        },\r\n\r\n        initContentEditable: function (section, options) {\r\n            flog('initContentEditable', section, options);\r\n\r\n            if (!section.hasClass('keditor-editable') || !section.hasClass('keditor-initializing')) {\r\n                section.addClass('keditor-initializing');\r\n\r\n                flog('Render KEditor toolbar for section', section);\r\n                section.append(\r\n                    '<div class=\"keditor-toolbar\">' +\r\n                    '   <div class=\"btn-group-vertical\">' +\r\n                    '       <a href=\"#\" class=\"btn btn-xs btn-info btn-section-reposition\"><i class=\"fa fa-sort\"></i></a>' +\r\n                    '       <a href=\"#\" class=\"btn btn-xs btn-warning btn-section-duplicate\"><i class=\"fa fa-files-o\"></i></a>' +\r\n                    '       <a href=\"#\" class=\"btn btn-xs btn-danger btn-section-delete\"><i class=\"fa fa-times\"></i></a>' +\r\n                    '   </div>' +\r\n                    '</div>'\r\n                );\r\n\r\n                flog('Initialize CKEditor for section', section);\r\n                var sectionContent = section.find('.keditor-section-content');\r\n                sectionContent.prop('contenteditable', true);\r\n\r\n                var id = 'keditor-section-' + (new Date()).getTime();\r\n                flog('Id for section content is: ' + id);\r\n                sectionContent.attr('id', id);\r\n\r\n                sectionContent.ckeditor(options.ckeditor);\r\n                sectionContent.on('input', function (e) {\r\n                    if (typeof options.onSectionChanged === 'function') {\r\n                        options.onSectionChanged.call(this, e);\r\n                    }\r\n\r\n                    if (typeof options.onContentChanged === 'function') {\r\n                        options.onContentChanged.call(this, e);\r\n                    }\r\n                });\r\n\r\n                section.addClass('keditor-editable');\r\n                section.removeClass('keditor-initializing');\r\n            } else {\r\n                if (section.hasClass('keditor-editable')) {\r\n                    flog('Section is already initialized!');\r\n                } else {\r\n                    flog('Section is initializing...');\r\n                }\r\n            }\r\n        },\r\n\r\n        getSectionContent: function (section) {\r\n            var id = section.find('.keditor-section-content').attr('id');\r\n\r\n            return CKEDITOR.instances[id].getData();\r\n        }\r\n    };\r\n\r\n    var methods = {\r\n        init: function (options) {\r\n            return $(this).each(function () {\r\n                var contentArea = $(this);\r\n                if (contentArea.data('keditorOptions')) {\r\n                    flog('KEditor is already initialized!');\r\n                } else {\r\n                    if (contentArea.attr('id').length === 0) {\r\n                        flog('Content area does not contain Id. Generating id for content area...');\r\n\r\n                        var id = 'keditor-content-area-' + (new Date()).getTime();\r\n                        contentArea.attr('id', id);\r\n                        flog('Id for content are is: \"' + id + '\"');\r\n                    }\r\n\r\n                    options = $.extend({}, DEFAULTS, options);\r\n                    contentArea.data('keditorOptions', options);\r\n                    KEditor.initContentArea(contentArea, options);\r\n                    KEditor.initSnippet(contentArea, options);\r\n                }\r\n\r\n                return contentArea;\r\n            });\r\n        },\r\n        getContent: function () {\r\n            var contentArea = $(this);\r\n            var html = '';\r\n\r\n            contentArea.find('> section').each(function () {\r\n                var section = $(this);\r\n\r\n                html += '<section>' + KEditor.getSectionContent(section) + '</section>';\r\n            });\r\n\r\n            return html;\r\n        }\r\n    };\r\n\r\n})(jQuery);\r\n"],"sourceRoot":"/source/"}